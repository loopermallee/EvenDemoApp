name: Flutter CI (Debug + Release with Smart Issues + Cache)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.yaml') }}-v2
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get --no-precompile

      # ✅ Log dependency status (non-blocking)
      - name: Check for dependency issues
        run: flutter pub outdated --mode=null-safety || true

      # Debug build
      - name: Build Android APK (Debug)
        id: build_debug
        continue-on-error: true
        run: |
          set -o pipefail
          echo "🔨 Building Debug APK..."
          flutter build apk --debug 2>&1 | tee debug-build-log.txt
          echo "exit_code=${PIPESTATUS[0]}" >> $GITHUB_OUTPUT

      # Release build
      - name: Build Android APK (Release)
        id: build_release
        continue-on-error: true
        run: |
          set -o pipefail
          echo "🔨 Building Release APK..."
          flutter build apk --release 2>&1 | tee release-build-log.txt
          echo "exit_code=${PIPESTATUS[0]}" >> $GITHUB_OUTPUT

      # ✅ Upload APKs as GitHub artifacts (optional download via Actions tab)
      - name: Upload Debug APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: build/app/outputs/flutter-apk/app-debug.apk

      - name: Upload Release APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk

      # ✅ Create or update GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest-build
          name: "Latest Build"
          body: "🚀 Automated build from CI"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ✅ Attach APKs to GitHub Release
      - name: Upload Release APK to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest-build
          files: build/app/outputs/flutter-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Debug APK to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest-build
          files: build/app/outputs/flutter-apk/app-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ✅ Merge logs (ensures build-log.txt always exists)
      - name: Merge logs
        run: |
          touch debug-build-log.txt release-build-log.txt
          cat debug-build-log.txt release-build-log.txt > build-log.txt

      # ✅ Auto-issue if build fails
      - name: Create formatted issue body
        if: failure()
        run: |
          KEY_ERRORS=$(grep -i "error\|exception\|failed\|fatal" build-log.txt | tail -40 || echo "⚠️ No explicit error logs captured. Check full log below.")
          FULL_LOG=$(cat build-log.txt || echo "⚠️ build-log.txt was empty")

          cat > issue-body.md << EOF
          # 🚨 CI Build Failure Report
          **Branch:** ${{ github.ref_name }}
          **Commit:** [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
          **Workflow Run:** [View Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          ## ❌ Key Errors
          \`\`\`
          ${KEY_ERRORS}
          \`\`\`

          ## 📋 Full Log
          <details><summary>Expand</summary>

          \`\`\`
          ${FULL_LOG}
          \`\`\`

          </details>

          ---
          *This issue was auto-generated by GitHub Actions.*
          EOF

      - name: Create GitHub Issue with logs
        if: failure()
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "🚨 CI Build Failure - ${{ github.ref_name }}"
          content-filepath: issue-body.md
          labels: |
            bug
            ci-failure
            auto-generated

      - name: Auto-close resolved CI failure issues
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'ci-failure,auto-generated'
            });
            for (const issue of issues.data) {
              if (issue.title.includes(process.env.GITHUB_REF_NAME)) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed',
                  body: "✅ CI build passed. Auto-closing this issue."
                });
              }
            }