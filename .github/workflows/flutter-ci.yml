name: Flutter CI (Debug + Release with Smart Issues + Cache)

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  actions: read

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          cache: true

      # ✅ Force Gradle plugin version consistency
      - name: Ensure Gradle plugin version
        run: |
          echo "Checking Android Gradle Plugin version..."
          sed -i 's/com.android.tools.build:gradle:8.2.2/com.android.tools.build:gradle:8.1.0/' android/build.gradle || true

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Install dependencies
        run: flutter pub get --no-precompile

      - name: Check for dependency issues
        run: flutter pub outdated --mode=null-safety || true

      # Debug build
      - name: Build Android APK (Debug)
        id: build_debug
        continue-on-error: true
        run: |
          set -o pipefail
          flutter build apk --debug 2>&1 | tee debug-build-log.txt
          echo "exit_code=${PIPESTATUS[0]}" >> $GITHUB_OUTPUT

      # Release build
      - name: Build Android APK (Release)
        id: build_release
        continue-on-error: true
        run: |
          set -o pipefail
          flutter build apk --release 2>&1 | tee release-build-log.txt
          echo "exit_code=${PIPESTATUS[0]}" >> $GITHUB_OUTPUT

      # ✅ Always merge logs
      - name: Merge logs
        if: always()
        run: |
          touch debug-build-log.txt release-build-log.txt
          cat debug-build-log.txt release-build-log.txt > build-log.txt

      # ✅ Upload logs as artifact
      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: build-log.txt

      # ✅ Upload APKs only if they exist
      - name: Upload Debug APK Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: ignore

      - name: Upload Release APK Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: ignore

      # ✅ Create GitHub Issue on failure
      - name: Create formatted issue body
        if: failure()
        run: |
          KEY_ERRORS=$(grep -i "error\\|exception\\|failed\\|fatal" build-log.txt | tail -40 || echo "⚠️ No explicit error logs found.")
          FULL_LOG=$(tail -200 build-log.txt || echo "⚠️ No logs found.")

          cat > issue-body.md << EOF
          # 🚨 CI Build Failure Report
          **Branch:** ${{ github.ref_name }}
          **Commit:** [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
          **Workflow Run:** [View Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          ## ❌ Key Errors
          \`\`\`
          ${KEY_ERRORS}
          \`\`\`

          ## 📋 Tail of Build Log
          \`\`\`
          ${FULL_LOG}
          \`\`\`
          EOF

      - name: Create GitHub Issue with logs
        if: failure()
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "🚨 CI Build Failure - ${{ github.ref_name }}"
          content-filepath: issue-body.md
          labels: |
            bug
            ci-failure
            auto-generated

      # ✅ Publish GitHub Release with APKs (only on success)
      - name: Create or Update GitHub Release with APKs
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest-build
          name: "Latest Build"
          body: |
            🚀 Automated build from commit ${{ github.sha }}

            - Commit: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
            - Triggered by: ${{ github.actor }}
          draft: false
          prerelease: false
          files: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/flutter-apk/app-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}