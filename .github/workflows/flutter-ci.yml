name: Flutter CI (Enhanced Build with Smart Issue Reporting)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android APK (Release)
        id: build
        run: |
          set -o pipefail
          echo "üî® Starting Flutter release build..."
          flutter build apk --release 2>&1 | tee build-log.txt
          BUILD_EXIT_CODE=${PIPESTATUS[0]}
          echo "build_exit_code=$BUILD_EXIT_CODE" >> $GITHUB_OUTPUT
          echo "‚úÖ Build step finished with exit code $BUILD_EXIT_CODE"
          exit $BUILD_EXIT_CODE

      # ‚úÖ Close failure issues automatically when build passes
      - name: Close failure issue on success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'ci-failure,auto-generated'
            });
            
            for (const issue of issues.data) {
              if (issue.title.includes('CI Build Failure')) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed',
                  body: "‚úÖ CI passed on latest run. Closing this auto-generated failure issue."
                });
                console.log(`Closed resolved issue #${issue.number}`);
              }
            }

      - name: Create formatted issue body on failure
        if: failure()
        run: |
          cat > issue-body.md << 'EOF'
          # üö® CI Build Failure Report

          **Build failed on:** `${{ github.ref_name }}` branch  
          **Commit:** [`${{ github.sha }}`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})  
          **Workflow:** [${{ github.workflow }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})  
          **Triggered by:** ${{ github.event_name }} (${{ github.actor }})  
          **Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')  

          ---

          ## üîç Environment Details
          - **OS:** Ubuntu Latest
          - **Java:** 17 (Temurin)
          - **Flutter:** 3.24.3
          - **Build Type:** Release APK

          ---

          ## ‚ùå Build Output
          <details>
          <summary>üìã Full Build Log (Click to expand)</summary>

          ```
          $(cat build-log.txt)
          ```

          </details>

          ---

          ## üéØ Key Errors (AI Analysis Ready)
          **Most Recent Errors:**
          ```
          $(tail -20 build-log.txt | grep -i "error\\|exception\\|failed\\|fatal" || echo "No specific errors found in last 20 lines")
          ```

          **Gradle/Build Errors:**
          ```
          $(grep -i "gradle\\|build.*failed\\|compilation.*error" build-log.txt | tail -10 || echo "No Gradle-specific errors found")
          ```

          **Flutter/Dart Errors:**
          ```
          $(grep -i "flutter\\|dart.*error\\|analysis.*error" build-log.txt | tail -10 || echo "No Flutter/Dart specific errors found")
          ```

          ---

          ## üõ†Ô∏è Troubleshooting Checklist
          - [ ] Check dependency compatibility
          - [ ] Verify Flutter/Dart SDK versions
          - [ ] Review recent code changes
          - [ ] Check for environment-specific issues
          - [ ] Validate build configuration

          ---
          *This issue was automatically created by the CI workflow. Please review the logs and update this issue with your findings.*
          EOF

      - name: Check for existing open issues
        if: failure()
        id: check_issues
        uses: actions/github-script@v7
        with:
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'ci-failure,auto-generated'
            });
            
            for (const issue of issues.data) {
              if (issue.title.includes('CI Build Failure')) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
                console.log(`Closed previous issue #${issue.number}`);
              }
            }
            return 'ready';

      - name: Create GitHub Issue with formatted content
        if: failure()
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "üö® CI Build Failure - ${{ github.ref_name }} (${{ github.sha }})"
          content-filepath: issue-body.md
          labels: |
            bug
            ci-failure
            auto-generated
            ${{ github.ref_name }}
          assignees: ${{ github.actor }}

      - name: Upload comprehensive artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-failure-artifacts-${{ github.sha }}
          path: |
            build-log.txt
            issue-body.md
            build/
          retention-days: 7