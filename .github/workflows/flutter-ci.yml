name: Flutter CI (Debug + Release with Smart Issues + Cache)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ---------------------------
      # Checkout repository
      # ---------------------------
      - name: Checkout repo
        uses: actions/checkout@v4

      # ---------------------------
      # Cache Flutter & Gradle
      # ---------------------------
      - name: Cache Flutter SDK
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: flutter-pub-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            flutter-pub-

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      # ---------------------------
      # Set up environment
      # ---------------------------
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'

      - name: Install dependencies
        run: flutter pub get

      # ---------------------------
      # Build Debug APK
      # ---------------------------
      - name: Build Debug APK
        id: build-debug
        run: |
          set -o pipefail
          echo "ðŸ”¨ Building Debug APK..."
          flutter build apk --debug 2>&1 | tee build-debug-log.txt
          echo "exit_code=${PIPESTATUS[0]}" >> $GITHUB_OUTPUT

      # ---------------------------
      # Build Release APK
      # ---------------------------
      - name: Build Release APK
        id: build-release
        run: |
          set -o pipefail
          echo "ðŸ”¨ Building Release APK..."
          flutter build apk --release 2>&1 | tee build-release-log.txt
          echo "exit_code=${PIPESTATUS[0]}" >> $GITHUB_OUTPUT

      # ---------------------------
      # Upload Artifacts
      # ---------------------------
      - name: Upload APKs & Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: |
            build/app/outputs/flutter-apk/*.apk
            build-debug-log.txt
            build-release-log.txt
          retention-days: 7

      # ---------------------------
      # Create Issue on Failure
      # ---------------------------
      - name: Prepare Issue Body
        if: failure()
        run: |
          cat > issue-body.md << 'EOF'
          # ðŸš¨ CI Build Failure

          **Commit:** [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
          **Workflow:** [${{ github.workflow }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          **Actor:** ${{ github.actor }}
          **Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')

          ---
          ## Debug Build Log (last 20 lines)
          ```
          $(tail -20 build-debug-log.txt)
          ```

          ## Release Build Log (last 20 lines)
          ```
          $(tail -20 build-release-log.txt)
          ```

          ---
          *Auto-generated by GitHub Actions*
          EOF

      - name: Auto-Close Old CI Issues
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'ci-failure'
            });

            for (const issue of issues.data) {
              if (issue.title.includes('CI Build Failure')) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
                console.log(`Closed old CI issue #${issue.number}`);
              }
            }

      - name: Create GitHub Issue
        if: failure()
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "ðŸš¨ CI Build Failure - ${{ github.ref_name }}"
          content-filepath: issue-body.md
          labels: |
            bug
            ci-failure
            auto-generated