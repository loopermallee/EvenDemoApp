name: Flutter CI (Debug + Release with Smart Reporting)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'

      - name: Install dependencies
        run: flutter pub get

      # Debug build
      - name: Build Android APK (Debug)
        id: debug
        run: |
          set -o pipefail
          echo "ðŸ”¨ Building Debug APK..."
          flutter build apk --debug 2>&1 | tee debug-log.txt
          echo "debug_exit_code=${PIPESTATUS[0]}" >> $GITHUB_OUTPUT

      # Release build
      - name: Build Android APK (Release)
        id: release
        run: |
          set -o pipefail
          echo "ðŸ”¨ Building Release APK..."
          flutter build apk --release 2>&1 | tee release-log.txt
          echo "release_exit_code=${PIPESTATUS[0]}" >> $GITHUB_OUTPUT

      # Upload success APKs
      - name: Upload APKs as artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: android-apks-${{ github.sha }}
          path: |
            build/app/outputs/flutter-apk/app-debug.apk
            build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7

      # Upload logs if failure
      - name: Upload logs as artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ github.sha }}
          path: |
            debug-log.txt
            release-log.txt
          retention-days: 7

      # Create issue if failure
      - name: Create formatted issue body
        if: failure()
        run: |
          cat > issue-body.md << 'EOF'
          # ðŸš¨ CI Build Failure Report
          Branch: `${{ github.ref_name }}`
          Commit: `${{ github.sha }}`
          Workflow: ${{ github.workflow }}
          Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

          ## Logs (last 30 lines)
          ```
          $(tail -30 debug-log.txt 2>/dev/null || echo "No debug log")
          $(tail -30 release-log.txt 2>/dev/null || echo "No release log")
          ```
          EOF

      - name: Close old CI failure issues
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'ci-failure,auto-generated'
            });
            for (const issue of issues.data) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              });
            }

      - name: Create GitHub Issue
        if: failure()
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "ðŸš¨ CI Build Failure - ${{ github.ref_name }} (${{ github.sha }})"
          content-filepath: issue-body.md
          labels: |
            bug
            ci-failure
            auto-generated