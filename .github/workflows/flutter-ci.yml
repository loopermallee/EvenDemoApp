name: Flutter CI (Debug + Release with Smart Issues + Cache)

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger

permissions:
  contents: write
  issues: write
  actions: read
  checks: write

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          cache: true

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Install dependencies
        run: flutter pub get --no-precompile

      - name: Check for dependency issues
        run: flutter pub outdated --mode=null-safety || true

      # Debug build
      - name: Build Android APK (Debug)
        run: |
          set -o pipefail
          flutter build apk --debug 2>&1 | tee debug-build-log.txt

      # Release build
      - name: Build Android APK (Release)
        run: |
          set -o pipefail
          flutter build apk --release 2>&1 | tee release-build-log.txt

      # âœ… Always merge logs
      - name: Merge logs
        if: always()
        run: |
          touch debug-build-log.txt release-build-log.txt
          cat debug-build-log.txt release-build-log.txt > build-log.txt

      # âœ… Always upload logs as artifact (success or fail)
      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: build-log.txt

      # âœ… Upload APKs only if they exist
      - name: Upload Debug APK Artifact
        if: success() || always()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: ignore

      - name: Upload Release APK Artifact
        if: success() || always()
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: ignore

      # âœ… Create/update single rolling "Latest Build" release (only if success)
      - name: Create or Update GitHub Release with APKs
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest-build
          name: "Latest Build"
          body: |
            ðŸš€ Automated build from commit ${{ github.sha }}

            - Commit: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
            - Triggered by: ${{ github.actor }}
          draft: false
          prerelease: false
          files: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/flutter-apk/app-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}